org: salvadordonayre
service: abarrotes-productos

custom:
  stage: ${opt:stage, 'dev'}

plugins:
  - serverless-openapi-documentation

provider:
  name: aws
  runtime: nodejs20.x
  timeout: 30
  stage: ${self:custom.stage}
  iam:
    role: arn:aws:iam::107956752347:role/LabRole
  environment:
    STAGE: ${self:custom.stage}

functions:
  crear:
    handler: ProductCreate.handler
    events:
      - http:
          path: /productos/crear
          method: post
          cors: true
          integration: lambda

  buscar:
    handler: ProductGet.handler
    events:
      - http:
          path: /productos/buscar
          method: get
          cors: true
          integration: lambda

  listar:
    handler: ProductList.handler
    events:
      - http:
          path: /productos/listar
          method: get
          cors: true
          integration: lambda

  modificar:
    handler: ProductModify.handler
    events:
      - http:
          path: /productos/modificar
          method: patch
          cors: true
          integration: lambda

  eliminar:
    handler: ProductDelete.handler
    events:
      - http:
          path: /productos/eliminar
          method: delete
          cors: true
          integration: lambda

  swaggerui:
    handler: swagger.lambda_handler
    events:
      - http:
          path: /docs
          method: get
          cors: true

  openapi:
    handler: swagger.openapi_handler
    events:
      - http:
          path: /openapi.yaml
          method: get
          cors: true

custom:
  documentation:
    apiInfo:
      version: '1.0.0'
      title: Abarrotes Productos API
      description: API para crear, buscar, listar, modificar y eliminar productos
    models:
      - name: ProductRequest
        contentType: 'application/json'
        schema:
          type: object
          properties:
            producto_id:
              type: string
              description: "ID único del producto"
            tenant_id:
              type: string
              description: "ID del tenant"
            nombre:
              type: string
              description: "Nombre del producto"
            precio:
              type: number
              format: float
              description: "Precio del producto"
            stock:
              type: integer
              description: "Cantidad en stock"
    endpoints:
      - path: /productos/crear
        method: post
        description: Crear producto
        requestModels:
          'application/json': ProductRequest
        responseMessages:
          - code: 200
            message: Producto creado con éxito
      - path: /productos/buscar
        method: get
        description: Buscar producto
        responseMessages:
          - code: 200
            message: Producto encontrado
      - path: /productos/listar
        method: get
        description: Listar productos
        responseMessages:
          - code: 200
            message: Productos listados con éxito
      - path: /productos/modificar
        method: patch
        description: Modificar producto
        requestModels:
          'application/json': ProductRequest
        responseMessages:
          - code: 200
            message: Producto modificado con éxito
      - path: /productos/eliminar
        method: delete
        description: Eliminar producto
        responseMessages:
          - code: 200
            message: Producto eliminado con éxito
